import{_ as s,c as n,o as a,a as l}from"./app.24161ae2.js";const d=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[{"level":2,"title":"defineComponent","slug":"definecomponent"},{"level":2,"title":"setData","slug":"setdata"},{"level":2,"title":"html","slug":"html"}],"relativePath":"essentials/api/index.md"}'),p={name:"essentials/api/index.md"},o=l(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For a better reading experience, the following code examples are all written using JSX syntax, except for the <code>html</code> API which is written using tag templates.</p></div><h2 id="definecomponent" tabindex="-1">defineComponent <a class="header-anchor" href="#definecomponent" aria-hidden="true">#</a></h2><p>Define components.</p><p>The first parameter is the configuration object and can be passed. Its configuration property is <code>mount</code>, which is used to mount the root component. Receives a &quot;container&quot; parameter, which can be an actual DOM element or a CSS selector string.</p><p>The second parameter is a function and must be passed. Return the HTML template. The parameter of the function is an object, and the properties of the object are <code>content</code> and <code>setData</code> respectively.</p><div class="language-jsx"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">defineComponent</span><span style="color:#EEFFFF;">(</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#EEFFFF;">    </span><span style="color:#F07178;">mount</span><span style="color:#89DDFF;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#app</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#EEFFFF;">Hello Strve</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Among them, we can use <code>content</code> to define data for the component and use it when you need it.</p><div class="language-jsx"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">defineComponent</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">({</span><span style="color:#EEFFFF;"> setData</span><span style="color:#89DDFF;">,</span><span style="color:#EEFFFF;"> content </span><span style="color:#89DDFF;">})</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#EEFFFF;">content</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Strve</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#EEFFFF;">Hello Strve</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#EEFFFF;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#EEFFFF;">(app</span><span style="color:#89DDFF;">.</span><span style="color:#EEFFFF;">data)</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span><span style="color:#546E7A;font-style:italic;">// {name:&#39;Strve&#39;}</span></span>
<span class="line"></span></code></pre></div><h2 id="setdata" tabindex="-1">setData <a class="header-anchor" href="#setdata" aria-hidden="true">#</a></h2><p>Modify page data.</p><p>The first parameter is a function and must be passed. Execute the callback function to modify the associated page data. The second parameter is the context, which must be passed in the outer scope but not in the inner scope.</p><p><strong>Internal scope:</strong></p><div class="language-jsx"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">defineComponent</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">({</span><span style="color:#EEFFFF;"> setData </span><span style="color:#89DDFF;">})</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">count</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">fragment</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={</span><span style="color:#EEFFFF;">add</span><span style="color:#89DDFF;">}&gt;</span><span style="color:#EEFFFF;">Add</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;{</span><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">}&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">fragment</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>External scope:</strong></p><div class="language-jsx"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">defineComponent</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">setData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">strve-js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#EEFFFF;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#EEFFFF;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">defineComponent</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">fragment</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onClick</span><span style="color:#89DDFF;">={</span><span style="color:#EEFFFF;">add</span><span style="color:#89DDFF;">}&gt;</span><span style="color:#EEFFFF;">Add</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;{</span><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">}&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#EEFFFF;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">fragment</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F07178;">  )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#EEFFFF;"> </span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">setData</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">app</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="html" tabindex="-1">html <a class="header-anchor" href="#html" aria-hidden="true">#</a></h2><p><code>html\`\`</code> is a tag function. The syntax of the tag function is to directly follow the function name with a template string. For example, you can write HTML tags directly in the template string.</p><p>In the JSX syntax environment, this API will not be used.</p><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#82AAFF;">defineComponent</span><span style="color:#EEFFFF;">(</span><span style="color:#89DDFF;">()</span><span style="color:#EEFFFF;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#EEFFFF;">count</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">html</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;p&gt;</span><span style="color:#89DDFF;">\${</span><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&lt;/p&gt;</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you are using the VSCode editor, you can go to the store to download the <a href="https://marketplace.visualstudio.com/items?itemName=Tobermory.es6-string-html" target="_blank" rel="noopener noreferrer">es6-string-html</a> plug-in, This plugin enables HTML template string highlighting.</p></div>`,21),e=[o];function t(F,c,r,y,D,i){return a(),n("div",null,e)}var h=s(p,[["render",t]]);export{d as __pageData,h as default};
